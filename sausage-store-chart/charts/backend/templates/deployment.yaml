---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Chart.Name }}-{{ .Release.Name }}"
  labels:
    app.kubernetes.io/name: sausage-{{ .Chart.Name }}
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app.kubernetes.io/component: "{{ .Chart.Name }}"
    app.kubernetes.io/part-of: sausage-store
    env: "{{ .Values.environment }}"
    app: "{{ .Chart.Name }}"
  annotations:
    prometheus.io/path: /actuator/prometheus
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true" 
spec:
  replicas: {{ .Values.replicas }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: {{ .Values.rollingUpdate.maxUnavailable }}
      maxSurge: {{ .Values.rollingUpdate.maxSurge }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image:  "{{ .Values.image }}:{{.Values.tag }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          resources:
            requests:
              memory: {{ .Values.resources.requests.memory }}
              cpu: {{ .Values.resources.requests.cpu }}
            limits:
              memory: {{ .Values.resources.limits.memory }}
              cpu: {{ .Values.resources.limits.cpu }}
          env:
            - name: SPRING_DATA_MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: {{ .Chart.Name }}
                  key: db
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Chart.Name }}
                  key: host
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Chart.Name }}
                  key: username
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Chart.Name }}
                  key: password
            - name: SPRING_FLYWAY_ENABLED
              value: "false"

          ports:
            - name: {{ .Chart.Name }}
              containerPort: {{ .Values.global.backendPort }}
          livenessProbe:
            httpGet:
              path: /actuator/
              port: {{ .Values.global.backendPort }}
            initialDelaySeconds: 15
            periodSeconds: 30
            timeoutSeconds: 1
            failureThreshold: 6
      imagePullSecrets:
        - name: regcred
